@page "/addcontent"
@using _10_Kernel_Memory.Services
@inject IMemoryService MemoryService
@rendermode InteractiveServer

<h1>Add Content</h1>

<h3>Store text</h3>
<div>
    <textarea @bind="_content" style="width: 100%; height: 200px;"></textarea>
</div>
<div>
    <button class="btn btn-primary" @onclick="StoreText">Add text</button>
</div>

<h3>Store file</h3>
<div>
    <InputFile OnChange="@LoadFiles" />
</div>
<div>
    @_output
</div>

<h3>Store web page</h3>
<div>
    Web page
</div>
<div>
    <input type="text" @bind="_url" />
</div>
<div>
    <button class="btn btn-primary" @onclick="StoreUrl">Add web page</button>
</div>

@code {
    private string _content;
    private string _output;
    private string _url;

    private async Task StoreText()
    {
        _output = "Loading...";
        var success = await MemoryService.StoreText(_content);
        if (success)
        {
            _output = "The text has been stored successfully";
            _content = string.Empty;
        }
        else
        {
            _output = "The text could not be stored";
        }
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        _output = "Saving file in progress...";
        var stream = e.File.OpenReadStream(1024L * 1024L * 1024L);

        var folderPath = Path.Combine(Directory.GetCurrentDirectory(), "Documents");
        var filePath = Path.Combine(folderPath, e.File.Name);

        if (!Directory.Exists(folderPath))
        {
            Directory.CreateDirectory(folderPath);
        }

        await using (var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write))
        {
            await stream.CopyToAsync(fileStream);
        }

        await MemoryService.StoreFile(filePath, e.File.Name);
        _output = "File stored successfully";
    }

    private async Task StoreUrl()
    {
        _output = "Loading...";
        var success = await MemoryService.StoreWebsite(_url);
        if (success)
        {
            _output = "The url has been stored successfully";
            _url = string.Empty;
        }
        else
        {
            _output = "The url could not be stored";
        }
    }
}
